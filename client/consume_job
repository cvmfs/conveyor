#!/usr/bin/env python3

import argparse
import pika
import time

from common import read_config

# Constant values
job_exchange = 'jobs.new'
job_queue = 'jobs.new'
job_routing_key = ''


def parse_args():
    parser = argparse.ArgumentParser(description='Process some integers.')
    parser.add_argument(
        '-c', '--config', default='/etc/cvmfs/publisher/config.json', help='config file')
    return parser.parse_args()


def callback(ch, method, properties, body):
    print(" [x] Received %r" % body)
    print(" [x] Done")
    ch.basic_ack(delivery_tag=method.delivery_tag)


def main():
    arguments = parse_args()

    config_file = arguments.config

    config = read_config(config_file)
    rmq_config = config['rabbitmq']

    credentials = pika.PlainCredentials(rmq_config['username'],
                                        rmq_config['password'])
    parameters = pika.ConnectionParameters(rmq_config['url'],
                                           rmq_config['port'],
                                           rmq_config['vhost'],
                                           credentials)
    connection = pika.BlockingConnection(parameters)
    channel = connection.channel()
    channel.basic_qos(prefetch_count=1)

    result = channel.queue_declare(queue=job_queue)
    queue = result.method.queue
    channel.queue_bind(exchange=job_exchange, routing_key='', queue=queue)
    channel.basic_consume(callback,
                          queue=queue,
                          no_ack=False)

    print(' [*] Waiting for messages. To exit, press Ctrl-C')
    channel.start_consuming()


if __name__ == '__main__':
    main()
